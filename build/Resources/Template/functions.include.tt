

<#+
string UpdateImagesPath(string content, string relativePath)
{
	Regex regexImg = new Regex(@"<img\s[^>]*>", RegexOptions.IgnoreCase);
	Regex regexSrc = new Regex(@"src=(?:(['""])(?<src>(?:(?!\1).)*)\1|(?<src>[^\s>]+))", RegexOptions.IgnoreCase | RegexOptions.Singleline);

	MatchCollection matchCollection = regexImg.Matches(content);

	foreach (Match matchImg in matchCollection)
	{
		if (regexSrc.IsMatch(matchImg.Groups[0].Value))
		{
			Match matchSrc = regexSrc.Match(matchImg.Groups[0].Value);
			string srcValue = matchSrc.Groups["src"].Value;

			if (!srcValue.StartsWith("http", System.StringComparison.OrdinalIgnoreCase))
			{
			    string foundSrc = matchSrc.Groups[0].Value;
				string newValue = Path.Combine(relativePath, matchSrc.Groups["src"].Value);
			    string newSrc = foundSrc.Replace(matchSrc.Groups["src"].Value, newValue);
				
				content = content.Replace(foundSrc, newSrc);
			}
		}
	}
	
	return content;
}

string UpdateSampleLinks(string content)
{
	Regex regexAnchor = new Regex("<a\\s[^>]*>", RegexOptions.IgnoreCase);
	Regex regexHref = new Regex("href=\"(.*?)\"", RegexOptions.IgnoreCase | RegexOptions.Singleline);

	MatchCollection matchCollection = regexAnchor.Matches(content);

	foreach (Match matchAnchor in matchCollection)
	{
		if (regexHref.IsMatch(matchAnchor.Groups[0].Value))
		{
			Match matchHref = regexHref.Match(matchAnchor.Groups[0].Value);
			string hrefValue = matchHref.Groups[1].Value;
			int anchorPosition = hrefValue.IndexOf(".html#");

			if (!hrefValue.StartsWith("http", System.StringComparison.OrdinalIgnoreCase) && anchorPosition > 0)
			{
				string newHref = hrefValue.Replace(hrefValue.Substring(0, anchorPosition + 5), String.Empty);
				content = content.Replace(hrefValue, newHref);
			}
		}
	}

	return content;
}
#>