@{
    ViewBag.Title = "TicTacToe Leaderboard";
}

<script src="@Url.Content("~/Scripts/jquery.tmpl.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/knockout-1.3.0beta.js")" type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/ServerInterface.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/UserService.js")" type="text/javascript"></script>

<h2>Leaderboard</h2>

<div>
    <p>The leaderboard shows the scores of the Tic Tac Toe game sample.</p>
    <p class="status">
        Loading...
    </p>

    <div data-bind="visible: isScoresEmpty()">There are no scores yet. Start playing to gather the leaderboard records.</div>
    <div data-bind="visible: !isScoresEmpty(), template: { name: 'buttons', foreach: topScores}"></div>
    <div data-bind="visible: !isScoresEmpty(), template: { name: 'board', foreach: topScores}"></div>
    <span data-bind="visible: showUserScores()"><p>Your position:</p></span>
    <div data-bind="visible: showUserScores(), template: { name: 'userBoard', foreach: userScores}"></div>
    
    <script id="buttons" type="text/html">
        <input type="button" data-bind='value: Name, click: function() { showBoard(Id); }' />
    </script>

    <script id="board" type="text/html">
        <table class="style1 board" data-bind='attr: { id: "board" + Id }'>
            <thead>
                <tr>
                    <th class="style1">
                        Position
                    </th>
                    <th class="style1">
                        Player
                    </th>
                    <th class="style1" data-bind='css: { highlight: Name == "Victories" }'>
                        Victories
                    </th>
                    <th class="style1" data-bind='css: { highlight: Name == "Defeats" }'>
                        Defeats
                    </th>
                    <th class="style1" data-bind='css: { highlight: Name == "GameCount" }'>
                        Game Count
                    </th>
                </tr>
            </thead>
            <tbody data-bind='template: { name: "score", foreach: Scores }'>
            </tbody>
        </table>
    </script>

    <script id="userBoard" type="text/html">
        <table class="style1 userboard" data-bind='attr: { id: "userboard" + Id }'>
            <thead>
                <tr>
                    <th class="style1">
                        Position
                    </th>
                    <th class="style1">
                        Player
                    </th>
                    <th class="style1" data-bind='css: { highlight: Name == "Victories" }'>
                        Victories
                    </th>
                    <th class="style1" data-bind='css: { highlight: Name == "Defeats" }'>
                        Defeats
                    </th>
                    <th class="style1" data-bind='css: { highlight: Name == "GameCount" }'>
                        Game Count
                    </th>
                </tr>
            </thead>
            <tbody data-bind='template: { name: "score", foreach: Scores }'>
            </tbody>
        </table>
    </script>
    
    <script id="score" type="text/html">
        <tr class="style1" data-bind='css: { d1: Id % 2 == 0, d1: Id % 2 == 1 }'>
            <td class="style1" data-bind='css: { highlight: window.viewModel.currentUserId == UserId }, text: Id'></td>
            <td class="left-aligned" data-bind='css: { highlight: window.viewModel.currentUserId == UserId }, text: UserName'></td>            
            <td class="style1" data-bind='css: { highlight: window.viewModel.currentUserId == UserId }, text: Victories'></td>
            <td class="style1" data-bind='css: { highlight: window.viewModel.currentUserId == UserId }, text: Defeats'></td>
            <td class="style1" data-bind='css: { highlight: window.viewModel.currentUserId == UserId }, text: GameCount'></td>
        </tr>
    </script>
</div>

<script type="text/javascript">
    var apiURL = "@this.ViewBag.ApiUrl";
    var blobURL = "@this.ViewBag.BlobUrl";

    var si = new ServerInterface();
    var user = new UserService(apiURL, blobURL, si);

    function ViewModel() 
    {
        this.isScoresEmpty = ko.observable(false);
        this.currentUserId = "@this.ViewBag.CurrentUserId";
        this.userScores = ko.observableArray([]);
        this.topScores = ko.observableArray([]);
        this.showUserScores = ko.observable(false);
    }

    window.topScoresCallback = function (items) {
        window.viewModel.topScores(items);
        window.viewModel.isScoresEmpty(window.viewModel.topScores()[0].Scores.length == 0);
        showBoard("1");
        $(".status").hide();
    };

    window.userScoresCallback = function (items) {
        window.viewModel.userScores(items);
        showBoard("1");
    };

    $(function()
    {
        window.viewModel = new ViewModel();

        user.getLeaderboardWithFocus(2, encodeURIComponent(viewModel.currentUserId), userScoresCallback, errorCallback);
        user.getLeaderboard(10, topScoresCallback, errorCallback);

        ko.applyBindings(viewModel);
    });

    function errorCallback(er) {
        alert("The leaderboard is not available right now, please try later.");
    }

    function showBoard(id) {
        $(".board").hide();
        $(".userboard").hide();
        $("#board" + id).show();
        $("#userboard" + id).show();

        if (window.viewModel.topScores().length > 0
            && window.viewModel.userScores().length > 0 
            && window.viewModel.userScores()[0].Scores.length > 0) {
            var found = false;

            for (var i = 0; i < window.viewModel.topScores().length; i++) {
                if (window.viewModel.topScores()[i].Id == id) {
                    for (var j = 0; j < window.viewModel.topScores()[i].Scores.length; j++) {
                        if (window.viewModel.topScores()[i].Scores[j].UserId == window.viewModel.currentUserId) {
                            found = true;
                        }
                    }
                }
            }

            window.viewModel.showUserScores(!found);
        }
        else {
            window.viewModel.showUserScores(false);
        }
    }
</script>