@{
    this.ViewBag.Title = "Tankster | Manage Inventory";
}
Welcome <b><span data-bind='text: userProfile().DisplayName'></span></b>
<br />
<div>
    <table class="style1">
        <thead>
            <tr>
                <th class="style1">
                    Name
                </th>
                <th class="style1">
                    Price
                </th>
                <th class="style1">
                    Type
                </th>
                <th class="style1">
                </th>
            </tr>
        </thead>
        <tbody data-bind='template: { name: "availableItem", foreach: availableItems }'>
            <script id="availableItem" type="text/html">
                <tr>
                    <td class="style1" data-bind='text: Name'></td>
                    <td class="style1" data-bind='text: Price'></td>
                    <td class="style1" data-bind='text: Type'></td>
                    <td><a href="#" data-bind='click: function() { window.client.buyItem($data) }'>Buy</a></td>
                </tr>
            </script>
        </tbody>
    </table>
</div>
<br />
<div>
    Your inventory:<br />
    <span data-bind='visible: playerItems().length == 0'>You have no items</span>
    <div data-bind='visible: playerItems().length > 0'>
        <table class="style1">
            <thead>
                <tr>
                    <th class="style1">
                        Name
                    </th>
                    <th class="style1">
                        Type
                    </th>
                    <th class="style1">
                    </th>
                </tr>
            </thead>
            <tbody data-bind='template: { name: "playerItem", foreach: playerItems }'>
                <script id="playerItem" type="text/html">
                    <tr>
                        <td class="style1" data-bind='text: Name'></td>
                        <td class="style1" data-bind='text: Type'></td>
                        <td>
                            <a href="#" data-bind='visible: !viewModel.isItemSelected($data), click: function() { window.client.selectCustomization($data) }'>Select</a>
                            <span data-bind='visible: viewModel.isItemSelected($data)'>Selected</span>
                        </td>
                    </tr>
                </script>
            </tbody>
        </table>
    </div>
</div>
<br />
<input type="button" value="Return to War Room" data-bind='click: function() { window.location.replace("/Client/WarRoom"); }' />
<!-- WAITING FOR GAME QUEUE ID CLIENT - BEGIN -->
<script type="text/javascript">
    var CustomizationType = { Avatar: "Avatar", TankType: "Tank Type" };

    function InventoryManagerClient()
    {
        this.serverInterface = new ServerInterface(this);
    }

    InventoryManagerClient.prototype.buyItem = function(itemToBuy)
    {
        this.serverInterface.sendAjaxPost('/user/inventory/buy/' + itemToBuy.Id, null,
            function()
            {
                viewModel.playerItems.push(itemToBuy);
            });
    };
    InventoryManagerClient.prototype.selectCustomization = function(itemToUse)
    {
        var newCustomizations = jQuery.grep(viewModel.selectedCustomizations(), function(item)
            {
            return item.Type != itemToUse.Type;
            });
        newCustomizations.push(itemToUse);
        this.serverInterface.sendAjaxPost('/user/profile', { customizationsIds: selectObjectIds(newCustomizations) },
            function()
            {
                window.viewModel.selectedCustomizations(newCustomizations);
            });
    };

    function ViewModel()
    {
        this.currentUserId = "@this.ViewBag.CurrentUserId";
        this.availableItems = ko.observableArray([]);
        this.playerItems = ko.observableArray();
        this.selectedCustomizations = ko.observableArray();
        this.userProfile = ko.observable({ DisplayName: "" });
    }

    window.usersCallback = function (userProfileStatus) {
        window.viewModel.userProfile(userProfileStatus);
        window.viewModel.playerItems(userProfileStatus.Inventory);
        setTimeout(getAvailableItems, 1000);
    };

    window.inventoryCallback = function (items) {
        window.viewModel.availableItems(items);
        var customizations = viewModel.userProfile().Customizations;
        jQuery.each(customizations, function (id) {
            window.viewModel.selectedCustomizations.push(customizations[id]);
        });
    };

    window.getAvailableItems = function()
    {
        window.client.serverInterface.sendAjaxJsonpGet(GetBlobEndpoint() + "inventory/items?callback=?",
            "inventoryCallback");
    };

    ViewModel.prototype.isItemSelected = function(item)
    {
        return jQuery.inArray(item.Id, selectObjectIds(this.selectedCustomizations())) >= 0;
    };

    function IdToInventoryItem(items, itemId)
    {
        for (var i = 0; i < items.length; i++)
        {
            if (items[i].id == itemId)
            {
                return items[i];
            }
        }
        return { Id: itemId, Name: 'Unknown Weapon', Price: 12, Sml: "someimage.jpg" };
    }

    $(function()
        {
        window.client = new InventoryManagerClient();
        window.viewModel = new ViewModel();
        window.client.serverInterface.sendAjaxJsonpGet(GetBlobEndpoint() + "users/" + viewModel.currentUserId + "?callback=?",
            "usersCallback");
        ko.applyBindings(viewModel);
        });
    
    
</script>